@import '~@hi-ui/core-css/lib/index.scss';

$prefix: '#{$component-prefix}-input' !default;

.#{$prefix} {
  $input-shadow: 0 0 0 2px use-color-mode('primary-10');
  $input-error-shadow: 0 0 0 2px use-color-mode('error-10');

  @include input-reset;

  // basic
  flex: 1;
  display: inline-block;
  box-sizing: border-box;
  transition-property: all;
  transition-duration: use-motion-duration('normal');
  transition-timing-function: use-motion-bezier('normal');
  width: 100%;
  font-size: inherit;
  line-height: inherit;
  color: use-color('gray', 700);

  &::placeholder {
    color: use-color('gray', 400);
  }

  &:disabled {
    cursor: not-allowed;
  }

  &__inner {
    position: relative;
    display: inline-flex;
    height: auto;
    width: 100%;
    box-sizing: border-box;
    font-size: inherit;
    border: use-border-size('normal') use-color-static('transparent');
    background-color: use-color-static('white');
    transition-property: all;
    transition-duration: use-motion-duration('normal');
    transition-timing-function: use-motion-bezier('normal');
    outline: none;
    z-index: auto;

    &:not(.disabled):hover {
      z-index: calc(#{use-zindex('absolute')} + 1);
    }

    &:not(.disabled).focused {
      z-index: calc(#{use-zindex('absolute')} + 1);
    }
  }

  &__outer {
    display: flex;
    position: relative;
    margin: 0;
    padding: 0;
    justify-content: space-between;
    height: auto;
    width: 100%;
  }

  // clear icon
  &__clear {
    display: inline-flex;
    align-items: center;
    height: auto;
    text-align: center;
    font-size: use-text-size('normal');
    color: use-color('gray', 500);
    flex-shrink: 0;
    cursor: pointer;
    transition-property: all;
    transition-duration: use-motion-duration('normal');
    transition-timing-function: use-motion-bezier('normal');
    visibility: hidden;
    opacity: 0;

    &:hover {
      color: use-color('gray', 700);
    }

    &.active {
      visibility: visible;
      opacity: 1;
    }

    // 和用户传入 suffix 保持间隔
    .#{$prefix}__inner--suffix & {
      margin-inline-end: use-spacing(2);
    }
  }

  &__prefix,
  &__suffix {
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
    color: use-color('gray', 700);
    font-size: inherit;
    text-align: center;
  }

  // 减去左或右边框 1px
  $input-padding-width: calc(#{use-spacing(6)} - 1px);

  &__prefix {
    padding-left: $input-padding-width;
  }

  &__suffix {
    // 减去右边框 1px
    padding-right: $input-padding-width;
  }

  &__prepend,
  &__append {
    position: relative;
    color: use-color('gray', 700);
    background-color: use-color('gray', 50);
    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    font-size: inherit;
    text-align: center;
    padding: 0 $input-padding-width;
    border: use-border-size('normal') use-color-static('transparent');
    white-space: nowrap;
    transition-property: all;
    transition-duration: use-motion-duration('normal');
    transition-timing-function: use-motion-bezier('normal');
    // 处理 input 和 pend 边界框出现
    z-index: use-zindex('absolute');
  }

  &__prepend {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    margin-right: -1px;
  }

  &__append {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    margin-left: -1px;
  }

  &--size {
    &-sm {
      font-size: use-text-size('sm');
      line-height: get-text-lineheight('sm');

      .#{$prefix} {
        padding: 1px $input-padding-width;
      }

      .#{$prefix}__inner,
      .#{$prefix}__prepend,
      .#{$prefix}__append {
        border-radius: use-border-radius('normal');
      }

      .#{$prefix}__prepend {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      .#{$prefix}__append {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }

    &-md {
      font-size: use-text-size('normal');
      line-height: get-text-lineheight('normal');

      .#{$prefix} {
        padding: 4px $input-padding-width;
      }

      .#{$prefix}__inner,
      .#{$prefix}__prepend,
      .#{$prefix}__append {
        border-radius: use-border-radius('normal');
      }

      .#{$prefix}__prepend {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      .#{$prefix}__append {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }

    &-lg {
      font-size: use-text-size('lg');
      line-height: get-text-lineheight('lg');

      .#{$prefix} {
        padding: 7px $input-padding-width;
      }

      .#{$prefix}__inner,
      .#{$prefix}__prepend,
      .#{$prefix}__append {
        border-radius: use-border-radius('normal');
      }

      .#{$prefix}__prepend {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      .#{$prefix}__append {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }

  &--appearance {
    &-outline {
      .#{$prefix}__inner {
        border-color: use-color('gray', 300);

        &:not(.disabled):hover {
          border-color: use-color-mode('primary');
        }

        &:not(.disabled).focused {
          box-shadow: $input-shadow;
          border-color: use-color-mode('primary');
        }

        &:not(.disabled).invalid {
          border-color: use-color-mode('error');

          &.hover {
            border-color: use-color-mode('error');
          }

          &.focused {
            box-shadow: $input-error-shadow;
          }
        }
      }

      .#{$prefix}__prepend,
      .#{$prefix}__append {
        border-color: use-color('gray', 300);
      }
    }

    &-unset {
      .#{$prefix} {
        padding-left: 0;
        padding-right: 0;
      }

      &.#{$prefix}__outer--prepend,
      .#{$prefix}__inner--prefix {
        .#{$prefix} {
          padding-left: $input-padding-width;
        }
      }

      &.#{$prefix}__outer--append,
      .#{$prefix}__inner--suffix {
        .#{$prefix} {
          padding-right: $input-padding-width;
        }
      }

      .#{$prefix}__inner {
        border-radius: 0;
      }
    }

    &-filled {
      .#{$prefix}__inner {
        background-color: use-color('gray', 100);

        &:not(.disabled):hover {
          // box-shadow: 0 0 0 1px use-color-mode('primary');
          border-color: use-color-mode('primary');
        }

        &:not(.disabled).focused {
          box-shadow: $input-shadow;
          border-color: use-color-mode('primary');
          background-color: use-color-static('white');
        }

        &:not(.disabled).invalid {
          border-color: use-color-mode('error');

          &.hover {
            border-color: use-color-mode('error');
          }

          &.focused {
            box-shadow: $input-error-shadow;
          }
        }
      }
    }

    &-underline {
      .#{$prefix} {
        padding-left: 0;
        padding-right: 0;
      }

      &.#{$prefix}__outer--prepend,
      .#{$prefix}__inner--prefix {
        .#{$prefix} {
          padding-left: $input-padding-width;
        }
      }

      &.#{$prefix}__outer--append,
      .#{$prefix}__inner--suffix {
        .#{$prefix} {
          padding-right: $input-padding-width;
        }
      }

      .#{$prefix}__inner {
        border-radius: 0;

        &::after {
          content: '';
          box-sizing: border-box;
          display: block;
          position: absolute;
          bottom: 0;
          // 两边透明边框各负 1px
          left: -1px;
          right: -1px;
          border-bottom: 1px solid use-color('gray', 300);
          transition: all 0.3s;
        }

        &:not(.disabled):hover {
          &::after {
            border-bottom-color: use-color-mode('primary');
          }
        }

        &:not(.disabled).focused {
          &::after {
            border-bottom-color: use-color-mode('primary');
          }
        }

        &:not(.disabled).invalid {
          &::after {
            border-bottom-color: use-color-mode('error');
          }

          &.hover {
            &::after {
              border-bottom-color: use-color-mode('error');
            }
          }
        }
      }
    }

    &-outline,
    &-unset,
    &-filled,
    &-underline {
      .#{$prefix}__inner {
        &.disabled {
          color: use-color('gray', 400);
          background-color: use-color('gray', 200);
        }
      }
    }
  }

  // 移除连接处圆角
  &__outer--prepend {
    .#{$prefix}__inner {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &-unset {
      .#{$prefix}__prepend {
        border: none;
        padding: 0;

        // .hi-input__prepend .hi-btn, .hi-input__prepend .hi-select__input, .hi-input_m__prepend .hi-btn, .hi-input_m__prepend .hi-select__input
        &  .#{$component-prefix}-mock-input {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }

        &  .#{$component-prefix}-button {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }
      }
    }
  }

  &__outer--append {
    .#{$prefix}__inner {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &-unset {
      .#{$prefix}__append {
        border: none;
        padding: 0;

        &  .#{$component-prefix}-mock-input {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }

        &  .#{$component-prefix}-button {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
    }
  }
}
